{"ast":null,"code":"import _objectWithoutProperties from\"/Users/onaneyeajibola/Desktop/Dev/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useContext}from'react';import{Route,Redirect}from'react-router-dom';import AuthContext from'../../context/auth/authContext';var PrivateRoute=function PrivateRoute(_ref){var Component=_ref.component,rest=_objectWithoutProperties(_ref,[\"component\"]);var authContext=useContext(AuthContext);var isAuthenticated=authContext.isAuthenticated,loading=authContext.loading;return/*#__PURE__*/React.createElement(Route,Object.assign({},rest,{render:function render(props){return!isAuthenticated&&!loading?/*#__PURE__*/React.createElement(Redirect,{to:\"/login\"}):/*#__PURE__*/React.createElement(Component,props);}}));};export default PrivateRoute;","map":{"version":3,"sources":["/Users/onaneyeajibola/Desktop/Dev/contact-keeper/client/src/components/routing/PrivateRoute.js"],"names":["React","useContext","Route","Redirect","AuthContext","PrivateRoute","Component","component","rest","authContext","isAuthenticated","loading","props"],"mappings":"8JAAC,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,CACA,MAAOC,CAAAA,WAAP,KAAwB,gCAAxB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAuC,IAAzBC,CAAAA,SAAyB,MAApCC,SAAoC,CAAXC,IAAW,8CACxD,GAAMC,CAAAA,WAAW,CAAGR,UAAU,CAACG,WAAD,CAA9B,CADwD,GAEhDM,CAAAA,eAFgD,CAEnBD,WAFmB,CAEhDC,eAFgD,CAE/BC,OAF+B,CAEnBF,WAFmB,CAE/BE,OAF+B,CAGxD,mBACI,oBAAC,KAAD,kBAAYH,IAAZ,EAAmB,MAAM,CAAE,gBAAAI,KAAK,QAAI,CAACF,eAAD,EAAoB,CAACC,OAArB,cAChC,oBAAC,QAAD,EAAU,EAAE,CAAC,QAAb,EADgC,cAGhC,oBAAC,SAAD,CAAgBC,KAAhB,CAH4B,EAAhC,GADJ,CAQH,CAXD,CAaA,cAAeP,CAAAA,YAAf","sourcesContent":[" import React, { useContext } from 'react';\r\n import { Route, Redirect } from 'react-router-dom';\r\n import AuthContext from '../../context/auth/authContext' \r\n \r\n const PrivateRoute = ({ component: Component, ...rest }) => {\r\n     const authContext = useContext(AuthContext);\r\n     const { isAuthenticated, loading } = authContext\r\n     return (\r\n         <Route { ...rest } render={props => !isAuthenticated && !loading ? (\r\n             <Redirect to='/login' />\r\n         ) : (\r\n             <Component { ...props } />\r\n         )\r\n         } />\r\n     )\r\n }\r\n \r\n export default PrivateRoute\r\n "]},"metadata":{},"sourceType":"module"}
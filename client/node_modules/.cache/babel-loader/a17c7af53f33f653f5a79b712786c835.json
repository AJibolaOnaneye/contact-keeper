{"ast":null,"code":"import React,{useContext,useRef,useEffect}from'react';import ContactContext from'../../context/contact/contactContext';var ContactFilter=function ContactFilter(){var contactContext=useContext(ContactContext);var text=useRef('');var filterContact=contactContext.filterContact,clearFilter=contactContext.clearFilter,filtered=contactContext.filtered;useEffect(function(){if(filtered===null){text.current.value='';}});var onChange=function onChange(e){if(text.current.value){filterContact(e.target.value);}else{clearFilter();}};return/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"input\",{ref:text,type:\"text\",placeholder:\"Filter Contacts..\",onChange:onChange}));};export default ContactFilter;","map":{"version":3,"sources":["/Users/onaneyeajibola/Desktop/Dev/contact-keeper/client/src/components/contacts/ContactFilter.js"],"names":["React","useContext","useRef","useEffect","ContactContext","ContactFilter","contactContext","text","filterContact","clearFilter","filtered","current","value","onChange","e","target"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,MAA5B,CAAoCC,SAApC,KAAqD,OAArD,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxB,GAAMC,CAAAA,cAAc,CAAGL,UAAU,CAACG,cAAD,CAAjC,CACA,GAAMG,CAAAA,IAAI,CAAGL,MAAM,CAAC,EAAD,CAAnB,CAFwB,GAIhBM,CAAAA,aAJgB,CAIyBF,cAJzB,CAIhBE,aAJgB,CAIDC,WAJC,CAIyBH,cAJzB,CAIDG,WAJC,CAIYC,QAJZ,CAIyBJ,cAJzB,CAIYI,QAJZ,CAMxBP,SAAS,CAAC,UAAM,CACZ,GAAIO,QAAQ,GAAK,IAAjB,CAAwB,CACpBH,IAAI,CAACI,OAAL,CAAaC,KAAb,CAAqB,EAArB,CACH,CACJ,CAJQ,CAAT,CAMA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,CAAC,CAAI,CACnB,GAAIP,IAAI,CAACI,OAAL,CAAaC,KAAjB,CAAwB,CACpBJ,aAAa,CAACM,CAAC,CAACC,MAAF,CAASH,KAAV,CAAb,CACH,CAFD,IAEO,CACHH,WAAW,GACd,CACH,CAND,CAOA,mBACI,6CACI,6BAAO,GAAG,CAAEF,IAAZ,CAAkB,IAAI,CAAC,MAAvB,CAA8B,WAAW,CAAC,mBAA1C,CAA8D,QAAQ,CAAEM,QAAxE,EADJ,CADJ,CAKH,CAxBD,CA0BA,cAAeR,CAAAA,aAAf","sourcesContent":["import React, { useContext, useRef, useEffect } from 'react';\r\nimport ContactContext from '../../context/contact/contactContext';\r\n\r\nconst ContactFilter = () => {\r\n    const contactContext = useContext(ContactContext);\r\n    const text = useRef('');\r\n\r\n    const { filterContact, clearFilter, filtered } = contactContext;\r\n\r\n    useEffect(() => {\r\n        if( filtered === null ) {\r\n            text.current.value = ''\r\n        }\r\n    })\r\n\r\n    const onChange = e => {\r\n       if (text.current.value) {\r\n           filterContact(e.target.value)\r\n       } else {\r\n           clearFilter()\r\n       }\r\n    }\r\n    return (\r\n        <form>\r\n            <input ref={text} type='text' placeholder='Filter Contacts..' onChange={onChange} />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ContactFilter\r\n"]},"metadata":{},"sourceType":"module"}
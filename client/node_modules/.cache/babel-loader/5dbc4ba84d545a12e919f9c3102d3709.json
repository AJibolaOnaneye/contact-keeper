{"ast":null,"code":"var _jsxFileName = \"/Users/onaneyeajibola/Desktop/Dev/contact-keeper/client/src/components/auth/Login.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport AlertContext from '../../context/alert/alertContext';\nimport AuthContext from '../../context/auth/authContext';\n\nconst Login = props => {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n  const {\n    setAlert\n  } = alertContext;\n  const {\n    login,\n    error,\n    clearErrors,\n    isAuthenticated\n  } = authContext;\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push('/');\n    }\n\n    if (error === 'Invalid Credentials') {\n      setAlert(error, 'danger');\n      clearErrors();\n    } // eslint-disable-next-line\n\n  }, [error, isAuthenticated, props.history]);\n  const [user, SetUser] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = user;\n\n  const onChange = e => SetUser({ ...user,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (email === '' || password === '') {\n      setAlert('Please fill in all fields', 'danger');\n    } else {\n      login({\n        email,\n        password\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Account \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Login\",\n    className: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/onaneyeajibola/Desktop/Dev/contact-keeper/client/src/components/auth/Login.js"],"names":["React","useState","useContext","useEffect","AlertContext","AuthContext","Login","props","alertContext","authContext","setAlert","login","error","clearErrors","isAuthenticated","history","push","user","SetUser","email","password","onChange","e","target","name","value","onSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport AlertContext from '../../context/alert/alertContext';\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\nconst Login = (props) => {\r\n    const alertContext = useContext(AlertContext);\r\n    const authContext = useContext(AuthContext);\r\n\r\n    const { setAlert } = alertContext;\r\n\r\n    const { login, error, clearErrors, isAuthenticated } = authContext\r\n\r\n    useEffect(() => {\r\n        if(isAuthenticated) {\r\n            props.history.push('/')\r\n        }\r\n\r\n        if(error === 'Invalid Credentials') {\r\n            setAlert(error, 'danger')\r\n            clearErrors()\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [error, isAuthenticated, props.history]) \r\n\r\n    const [user, SetUser] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const { email, password } = user;\r\n\r\n    const onChange = e => SetUser({...user, [e.target.name]: e.target.value});\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        if(email === '' || password === ''){\r\n            setAlert('Please fill in all fields', 'danger')\r\n        } else {\r\n            login({\r\n                email,\r\n                password\r\n            })\r\n        }\r\n    \r\n    }\r\n\r\n    return (\r\n        <div className='form-container'>\r\n        <h1>\r\n            Account <span className=\"text-primary\">Login</span>\r\n        </h1>\r\n            <form onSubmit={onSubmit}>\r\n               \r\n                <div className='form-group'>\r\n                    <label htmlFor='email'>\r\n                        Email Address\r\n                    </label>\r\n                    <input type='text' name='email' value={email} onChange={onChange} required />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label htmlFor='password'>\r\n                        Password\r\n                    </label>\r\n                    <input type='password' name='password' value={password} onChange={onChange} required/>\r\n                </div>\r\n                <input type='submit' value=\"Login\"  className=\"btn btn-primary btn-block\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}